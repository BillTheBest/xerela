<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" 
	width="800" height="400"
	title="@Resource(key='compare_title', bundle='messages')">
	<mx:Metadata>
        [ResourceBundle('messages')]
    </mx:Metadata>
		<mx:Script>
		<![CDATA[
			import mx.utils.ObjectUtil;
			import org.xerela.flex.DisplayElf;
			import org.xerela.flex.editor.EditorElf;
			import org.xerela.flex.services.ResultElf;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import org.xerela.flex.services.WebServiceElf;
			import mx.managers.PopUpManager;

			private var dev1:Object;
			private var dev2:Object;
			private var singleDevice:Boolean = false;
			
			[Bindable]
			private var configsDeviceOne:ArrayCollection;
			[Bindable]
			private var configsDeviceTwo:ArrayCollection;
            
            public function set devices(devices:Array):void
			{
				dev1 = devices[0];
				device1Label.text = dev1.hostname;
				
				if (devices.length > 1)
				{
					dev2 = devices[1];
					device2Label.text = dev2.hostname;
				}
				else
				{
					singleDevice = true;
					dev2 = dev1;
				}
				loadCurrent();
			}
			
			private function loadCurrent():void
			{			
				WebServiceElf.call('configstore', 'retrieveCurrentRevisionInfo', loadFirstDevice, dev1.ipAddress, dev1.managedNetwork);
				if (!singleDevice)
				{
					WebServiceElf.call('configstore', 'retrieveCurrentRevisionInfo', loadSecondDevice, dev2.ipAddress, dev2.managedNetwork);
				}
			}
			
			private function loadHistory():void
			{			
				WebServiceElf.call('configstore', 'retrieveChangeLog', loadFirstDeviceHistory, dev1.ipAddress, dev1.managedNetwork);
				if (!singleDevice)
				{
					WebServiceElf.call('configstore', 'retrieveChangeLog', loadSecondDeviceHistory, dev2.ipAddress, dev2.managedNetwork);
				}
			}
			
            private function runCompare():void
            {
            	EditorElf.open('Diff', {device1:dev1, revision1:leftConfigs.selectedItem, device2:dev2, revision2:rightConfigs.selectedItem});
            	PopUpManager.removePopUp(this);
            }
			
			private function loadFirstDevice(event:ResultEvent):void
			{
				configsDeviceOne = ResultElf.array(event);
				if (singleDevice)
				{
					configsDeviceTwo = configsDeviceOne;
				}
			}
			
			private function loadFirstDeviceHistory(event:ResultEvent):void
			{
				var changeLogs:ArrayCollection = ResultElf.array(event);
				configsDeviceOne = ConfigElf.flattenChangeLogs(changeLogs);
				if (singleDevice)
				{
					configsDeviceTwo = configsDeviceOne;
				}
			}
			
			private function loadSecondDevice(event:ResultEvent):void
			{
				configsDeviceTwo = ResultElf.array(event);
			}
			
			private function loadSecondDeviceHistory(event:ResultEvent):void
			{
				var changeLogs:ArrayCollection = ResultElf.array(event);
				configsDeviceOne = ConfigElf.flattenChangeLogs(changeLogs);
			}
			
			private function updateCompareButton():void
			{
				var d1:int = leftConfigs.selectedIndex;
				var d2:int = rightConfigs.selectedIndex;
				
				if (d1 >= 0 && d2 >= 0)
				{
					compareButton.enabled = true;
				}
				else
				{
					compareButton.enabled = false;
				}
			}
			
			private function changeHistory():void
			{
				if (showHistory.selected)
				{
					loadHistory();
				}
				else
				{
					loadCurrent();
				}
			}
			
			private function shortDate(item:Object, column:DataGridColumn):String
			{
				return DisplayElf.formatDate('medium', item.lastChanged);
			}

			private function compareDates(a:Object, b:Object):int
            {
                return ObjectUtil.dateCompare(a.lastChanged as Date, b.lastChanged as Date);
            }
		]]>
	</mx:Script>
	<mx:Grid top="10" bottom="10" left="10" right="10" width="98%" height="96%">
		<mx:GridRow width="100%" height="20">
			<mx:GridItem width="100%" height="100%">
				<mx:Label text="" id="device1Label"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<mx:Label text="" id="device2Label"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<mx:DataGrid width="100%" height="100%" id="leftConfigs" dataProvider="{configsDeviceOne}" change="updateCompareButton()">
					<mx:columns>
						<mx:DataGridColumn dataTipField="path" headerText="@Resource(key='compare_config_header', bundle='messages')" dataField="path"/>
						<mx:DataGridColumn dataTipField="lastUpdated" sortCompareFunction="compareDates" labelFunction="shortDate" headerText="@Resource(key='compare_last_updated_header', bundle='messages')"/>
					</mx:columns>
				</mx:DataGrid>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<mx:DataGrid width="100%" height="100%" id="rightConfigs" dataProvider="{configsDeviceTwo}" change="updateCompareButton()">
					<mx:columns>
						<mx:DataGridColumn headerText="@Resource(key='compare_config_header', bundle='messages')" dataField="path"/>
						<mx:DataGridColumn labelFunction="shortDate" sortCompareFunction="compareDates" headerText="@Resource(key='compare_last_updated_header', bundle='messages')"/>
					</mx:columns>
				</mx:DataGrid>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="20">
			<mx:GridItem width="100%" height="100%">
				<mx:CheckBox id="showHistory" label="@Resource(key='compare_show_historical', bundle='messages')" change="changeHistory()" />
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
			</mx:GridItem>
		</mx:GridRow>
	</mx:Grid>

    <mx:ControlBar horizontalAlign="right">
        <mx:Button id="compareButton" label="@Resource(key='compare_button_label', bundle='messages')" enabled="false" click="runCompare()"/>
        <mx:Button label="@Resource(key='cancel', bundle='messages')" click="PopUpManager.removePopUp(this)"/>
    </mx:ControlBar>
   
</mx:TitleWindow>
